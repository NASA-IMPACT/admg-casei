# YAML anchors for base definitions
base_def: &base_def
  docker:
    - image: node:12
  working_directory: ~/.
  environment:
    - DEVELOPMENT_BRANCH: develop

# Download and cache dependencies
restore_cache_def: &restore_cache_def
  keys:
    - deps-{{ .Environment.CACHE_VERSION }}-{{ .Branch }}-{{ checksum "yarn.lock" }}
    - deps-{{ .Environment.CACHE_VERSION }}-{{ .Branch }}
    - deps-{{ .Environment.CACHE_VERSION }} # fallback if checksum fails

##
## START Circle CI configuration
##

version: 2.1
jobs:
  prepare:
    <<: *base_def
    steps:
      - checkout
      - restore_cache:
          <<: *restore_cache_def
      - run: yarn install
      - save_cache:
          key: deps-{{ .Environment.CACHE_VERSION }}-{{ .Branch }}-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
            - .cache
  lint:
    <<: *base_def
    steps:
      - checkout
      - restore_cache:
          <<: *restore_cache_def
      - run: yarn lint
  test:
    <<: *base_def
    steps:
      - checkout
      - restore_cache:
          <<: *restore_cache_def
      - run: yarn test
  build:
    <<: *base_def
    steps:
      - checkout
      - restore_cache:
          <<: *restore_cache_def
      - run: yarn build
      - save_cache:
          key: build-{{ .Environment.CACHE_VERSION }}-{{ .Branch }}-{{ .Revision }}
          paths:
            - public ## cache build
  test-end-to-end:
    docker:
      # the Docker image with Cypress dependencies
      - image: cypress/base:12
    working_directory: ~/.
    environment:
      ## this enables colors in the output
      TERM: xterm
    steps:
      - checkout
      - restore_cache:
          keys:
            - deps-{{ .Environment.CACHE_VERSION }}-{{ .Branch }}-{{ checksum "yarn.lock" }}
      - restore_cache:
          keys:
            - build-{{ .Environment.CACHE_VERSION }}-{{ .Branch }}-{{ .Revision }} # the previously build /public
      - run: yarn test:e2e:ci
      - run: yarn test:cov && yarn test:cov:summary
      - store_artifacts:
          path: coverage
  build-and-deploy:
    <<: *base_def
    steps:
      - checkout
      - restore_cache:
          <<: *restore_cache_def
      - run: yarn install
      - run: yarn build
      - run: ./node_modules/surge/lib/cli.js --project ./public --domain airborne-inventory.surge.sh

workflows:
  main:
    jobs:
      - prepare
      - lint:
          requires:
            - prepare
      - test:
          requires:
            - prepare
      - build:
          requires:
            - lint
            - test
      - test-end-to-end:
          requires:
            - build
      - build-and-deploy:
          requires:
            - test-end-to-end
          filters:
            branches:
              only: develop
